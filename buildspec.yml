version: 0.2

env:
    secrets-manager:
      TOKEN: FirstSecret:tokenforsonars
      SNYK_TOKEN: SNYKSecret:snykauth

phases:
  install:
    runtime-versions:
      java: latest

  build:
    commands:
      # Grant execute permissions to the Gradle wrapper script
      - chmod +x ./gradlew
      
      # Static Application Security Scan (SAST scan) using SonarCloud
      - ./gradlew build -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=awstest -Dsonar.projectKey=awstest_testproject -Dsonar.token=$TOKEN

      # Quality gates for SAST
      #- |- 
      #  quality_status=$(curl -s -u $TOKEN: https://sonarcloud.io/api/qualitygates/project_status?projectKey=awstest_testproject | jq -r '.projectStatus.status')
      #  echo "SonarCloud analysistatus is $quality_status"; 
      #  if [ $quality_status = "ERROR" ] ; then exit 1;fi
      
      # Fetch SonarCloud Quality Gate status
      - echo "Fetching SonarCloud Quality Gate status..."
      - |-
        # Fetch SonarCloud project status
        response=$(curl -s -u "$TOKEN:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=awstest_testproject")
        quality_status=$(echo "$response" | jq -r '.projectStatus.status')

        # Check if the response is valid
        if [ -z "$quality_status" ] || [ "$quality_status" = "null" ]; then
          echo "Error: Unable to fetch SonarCloud Quality Gate status. Check TOKEN or projectKey."
          exit 1
        fi

        # Output the quality gate status
        echo "SonarCloud Quality Gate Status: $quality_status"

        # Check if the quality gate failed
        if [ "$quality_status" = "ERROR" ]; then
          echo "SonarCloud Quality Gate FAILED. Halting the pipeline."
          exit 1
        else
          echo "SonarCloud Quality Gate PASSED. Proceeding with the pipeline."
        fi

      #Software Composition Analysis Scan (SCA scan) using Snyk
      # install the latest Snyk CLI from GitHub Releases
      - latest_version=$(curl -Is "https://github.com/snyk/cli/releases/latest" | grep "^location" | sed 's#.*tag/##g' | tr -d "\r")
      - snyk_cli_dl_linux="https://github.com/snyk/cli/releases/download/${latest_version}/snyk-linux"
      - curl -Lo /usr/local/bin/snyk $snyk_cli_dl_linux
      - chmod +x /usr/local/bin/snyk
      
      # authenticate the Snyk CLI
      - snyk auth $SNYK_TOKEN
      
      # perform a Snyk SCA scan; continue if vulnerabilities are found
      - snyk test || true
      
      # upload a snapshot of the project to Snyk for continuous monitoring
      - snyk monitor

      #Dynamic Application Security Scan (DAST scan) using OWASP ZAP

      - |-
        apt-get update
        apt-get -y install wget
        apt-get -y install default-jdk
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
        tar -xvf ZAP_2.14.0_Linux.tar.gz
        cd ZAP_2.14.0
        ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout ../zap_report.html 
        
#Storing DAST Reports in S3 bucket

artifacts:
  files:
    - zap_report.html